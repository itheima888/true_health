<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/mvc
                  http://www.springframework.org/schema/mvc/spring-mvc.xsd
                  http://code.alibabatech.com/schema/dubbo
                  http://code.alibabatech.com/schema/dubbo/dubbo.xsd
                  http://www.springframework.org/schema/context
                  http://www.springframework.org/schema/context/spring-context.xsd
                          http://www.springframework.org/schema/security
                          http://www.springframework.org/schema/security/spring-security.xsd">

    <!--问题一：配置匿名过滤器-->
    <!--
    pattern="/css/**":配置匿名访问路径
    security="none":配置不需要权限
    -->
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <!--登录页面放行-->
    <security:http pattern="/login.html" security="none"/>


    <!--
    自动配置：生成登录页面
    use-expressions：true使用表达式
    -->
    <security:http auto-config="true" use-expressions="true">
        <!--配置需要访问路径以及需要的权限
        方式一：
        use-expressions="true"
        access="hasRole('ROLE_ADMIN')"

        方式二：
        use-expressions="fasle"
        access="ROLE_ADMIN"

        /**:拦截多层路径
        /*：拦截一层路径
        http://localhost:80/a/b/c.do

        security:intercept-url：配置顺序
        security:intercept-url主要是配置页面权限控制
        -->
        <!--只要认证通过就可以访问-->
        <security:intercept-url pattern="/a.html"  access="isAuthenticated()" />

        <!--<security:intercept-url pattern="/pages/**"  access="isAuthenticated()" />-->

        <!--拥有add权限就可以访问b.html页面-->
        <security:intercept-url pattern="/b.html"  access="hasAuthority('add')" />

        <!--先加载是配置文件，被拦截要求有add2权限-->
      <!--  <security:intercept-url pattern="/hello/delete.do"  access="hasAuthority('add2')" />-->
        <!--拥有ROLE_ADMIN角色就可以访问c.html页面，
            注意：此处虽然写的是ADMIN角色，框架会自动加上前缀ROLE_-->
        <!--自动拼接RLOE_-->
        <security:intercept-url pattern="/c.html"  access="hasRole('ADMIN')" />

        <!--拥有ROLE_ADMIN角色就可以访问d.html页面-->
        <security:intercept-url pattern="/d.html"  access="hasRole('ABC')" />


        <security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>



        <!--登录配置
        登录请求url:
        登录页面：
        登录用户名：
        登录密码：
        登录成功后跳转页面： default-target-url（index.html）
        登录失败跳转页面：登录页面
        -->
        <security:form-login login-processing-url="/login.do"
                             login-page="/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             default-target-url="/index.html" always-use-default-target="true"
                             authentication-failure-url="/login.html"/>
        <!--禁用csrf-->
        <security:csrf disabled="true"/>

        <!--登出配置
        logout-url="/logout.do" 登出url需要跟页面一致
        invalidate-session="true" 删除session
        logout-success-url 登出成功的页面
        -->
        <security:logout logout-url="/logout.do" invalidate-session="true" logout-success-url="/login.html"/>
    </security:http>

    <!--配置认证管理器authenticationManager-->
    <security:authentication-manager>
        <!--具体认证执行者-->
        <security:authentication-provider user-service-ref="mySecurtiyService">
            <!--账号密码可以写死在配置中-->
            <!--<security:user-service>-->
                <!--
                账号：name="admin"
                密码：{noop}123 没有使用任何加密方式（明文）
                authorities：权限（登录成功后授权）
                -->
                <!--<security:user name="admin" authorities="ROLE_ADMIN" password="{noop}123"/>
            </security:user-service>-->

            <!--配置密码加密方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--扫描-->
    <context:component-scan base-package="com.itheima"/>

    <!--注册bcrty对象-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled" />

</beans>